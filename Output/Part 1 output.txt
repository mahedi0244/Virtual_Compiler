int   : Keyword_int
x1   : Id
,   : Comma
x2   : Id
,   : Comma
x3   : Id
;   : Semicolon
int   : Keyword_int
[   : LBracket
10   : Int
:   : Colon
20   : Int
,   : Comma
0   : Int
:   : Colon
10   : Int
,   : Comma
-10   : Int
:   : Colon
-5   : Int
]   : RBracket
a1   : Id
,   : Comma
a2   : Id
,   : Comma
a3   : Id
;   : Semicolon
{   : LBrace
x1   : Id
=   : Eq
25   : Int
;   : Semicolon
x2   : Id
=   : Eq
10   : Int
;   : Semicolon
x3   : Id
=   : Eq
-5   : Int
;   : Semicolon
a1   : Id
[   : LBracket
15   : Int
,   : Comma
5   : Int
,   : Comma
-8   : Int
]   : RBracket
=   : Eq
15   : Int
;   : Semicolon
a2   : Id
[   : LBracket
12   : Int
,   : Comma
3   : Int
,   : Comma
-6   : Int
]   : RBracket
=   : Eq
20   : Int
;   : Semicolon
a1   : Id
[   : LBracket
(   : LParen
-   : Sub
x1   : Id
x2   : Id
)   : RParen
,   : Comma
(   : LParen
+   : Add
x3   : Id
10   : Int
)   : RParen
,   : Comma
(   : LParen
*   : Mul
-3   : Int
2   : Int
)   : RParen
]   : RBracket
=   : Eq
(   : LParen
+   : Add
a1   : Id
[   : LBracket
15   : Int
,   : Comma
5   : Int
,   : Comma
-8   : Int
]   : RBracket
a2   : Id
[   : LBracket
12   : Int
,   : Comma
3   : Int
,   : Comma
-6   : Int
]   : RBracket
)   : RParen
;   : Semicolon
print   : Keyword_print
a1   : Id
[   : LBracket
(   : LParen
-   : Sub
x1   : Id
x2   : Id
)   : RParen
,   : Comma
(   : LParen
+   : Add
x3   : Id
10   : Int
)   : RParen
,   : Comma
(   : LParen
*   : Mul
-3   : Int
2   : Int
)   : RParen
]   : RBracket
;   : Semicolon
}   : RBrace
